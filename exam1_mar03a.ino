#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/1f17d1a4-1564-4e20-bfed-80995b9f904b 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudRelativeHumidity humidity;
  bool led_status;
  bool switch1;
  CloudTemperature temperature;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <DHT.h>
#include <DHT_U.h>


#define DHTPIN 4
#define ledpin 5
#define ldrpin 34

#define DHTTYPE DHT11
DHT dht(DHTPIN,DHTTYPE);
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  dht.begin();
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  
  // Defined in thingProperties.h
  initProperties();

  pinMode (ledpin,OUTPUT);
  pinMode (ldrpin,INPUT);
  

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  if (switch1 ){
      //read ldr value
// int ldrValue = analogRead(ldrpin);
int ldrValue = analogRead(ldrpin);
 Serial.print("ldrValue=");
  Serial.print(ldrValue);
  if (ldrValue <= 500) {
    digitalWrite(ledpin, HIGH);  // Corrected the spelling
    led_status = true;
 
  } 
  else {
    digitalWrite(ledpin, LOW);
    led_status = false;
  }
  Serial.print("");
   Serial.print("led_status=");
   Serial.print(led_status);
  Serial.print("");


  //read dht22 sensor
float temp = dht.readTemperature();
float hum = dht.readHumidity();
  
  humidity = hum;
  temperature = temp;

  Serial.print("");
    Serial.print("temperature=" );
    Serial.print(temp);
    Serial.println("humidity=");
    Serial.print(hum); 
  Serial.print("");  
  }
delay(2000);
  
  
}

/*
  Since Temperature is READ_WRITE variable, onTemperatureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTemperatureChange()  {
  // Add your code here to act upon Temperature change
 
}

/*
  Since Humidity is READ_WRITE variable, onHumidityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHumidityChange()  {
  // Add your code here to act upon Humidity change
}

/*
  Since Switch1 is READ_WRITE variable, onSwitch1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch1Change()  {
  // Add your code here to act upon Switch1 change
}


/*
  Since Led1 is READ_WRITE variable, onLed1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed1Change() {
  int ldrValue = analogRead(ldrpin);
 Serial.print("ldrValue=");
  Serial.print(ldrValue);
  if (ldrValue <= 500) {
    digitalWrite(ledpin, HIGH);  // Corrected the spelling
    led_status = true;
 
  } 
  else {
    digitalWrite(ledpin, LOW);
    led_status = false;
  }
  Serial.print("");
   Serial.print("led_status=");
   Serial.print(led_status);
  Serial.print("");
}




/*
  Since LedStatus is READ_WRITE variable, onLedStatusChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLedStatusChange()  {
  // Add your code here to act upon LedStatus change
}